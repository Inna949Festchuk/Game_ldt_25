# nginx.conf

# upstream блок для Gunicorn
# Указывает, что запросы к django_app нужно перенаправлять на сервис 'web' на порт 8000.
upstream django_app {
    server web:8000;
}

# Сервер для перенаправления с HTTP на HTTPS
server {
    listen 80;
    # Укажите здесь ваше доменное имя или IP-адрес
    server_name localhost 89.111.169.123;

    # Перенаправляем весь HTTP трафик на HTTPS с кодом 301 (постоянный редирект)
    location / {
        return 301 https://$host$request_uri; 
    }
}

# Сервер для обработки HTTPS запросов
server {
    listen 443 ssl;
    # Укажите здесь ваше доменное имя или IP-адрес
    server_name localhost 89.111.169.123;

    # Пути к SSL сертификатам внутри контейнера Nginx
    ssl_certificate /etc/nginx/ssl/nginx-selfsigned.crt;
    ssl_certificate_key /etc/nginx/ssl/nginx-selfsigned.key;

    # Улучшенные параметры SSL для повышения безопасности
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # Обработка запросов к статическим файлам
    location /static/ {
        # Путь к статическим файлам, как он смонтирован в docker-compose
        alias /app/staticfiles/;
    }

    # Проксирование всех остальных запросов на Django/Gunicorn
    location / {
        proxy_pass http://django_app; # Проксируем запросы к Django сервису Gunicorn
        proxy_set_header Host $host; # Передаем оригинальное значение заголовка Host из запроса клиента (обычно доменное имя).
        proxy_set_header X-Real-IP $remote_addr; # Передаем реальный IP-адрес клиента. Без этого бэкенд будет видеть IP nginx.
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Сохраняем цепочку прокси через IP-адреса. Добавляем IP клиента к существующему заголовку.
        proxy_set_header X-Forwarded-Proto $scheme; # Важно для Django, чтобы понимать, что соединение идет по HTTPS
    }
}